DEG <- estimateGLMTagwiseDisp(DEG, design)
fit <- glmFit(DEG, design)
lrt <- glmLRT(fit,  contrast=c(1,0)) # accoding to design to modify
nrDEG=topTags(lrt, n=nrow(expr))
nrDEG=as.data.frame(nrDEG)
edgeR_DEG=nrDEG
View(edgeR_DEG)
View(limma_voom_DEG)
View(edgeR_DEG)
library(ggplot2)
DEG=edgeR_DEG
vol1 = ggplot(data=DEG, aes(x=log2FoldChange, y=-log10(pvalue), color=significant)) +
geom_point(alpha=0.4, size=1.75) +
theme_set(theme_set(theme_bw(base_size=20)))+
xlab("log2FoldChange") + ylab("-log10 p-value") +
ggtitle( title ) + theme(plot.title = element_text(size=15,hjust = 0.5))+
scale_colour_manual(values = c('blue','black','red')) # according to the levels(DEG$change)
print(vol1)
vol1 = ggplot(data=DEG, aes(x=logFC, y=-log10(PValue), color=significant)) +
geom_point(alpha=0.4, size=1.75) +
theme_set(theme_set(theme_bw(base_size=20)))+
xlab("logFC") + ylab("-log10 p-value") +
ggtitle( title ) + theme(plot.title = element_text(size=15,hjust = 0.5))+
scale_colour_manual(values = c('blue','black','red')) # according to the levels(DEG$change)
print(vol1)
DEG=edgeR_DEG
if(T){
logFC_cutoff <- with(DEG,mean(abs(logFC)) + 2*sd(abs(logFC)) )
DEG$change = as.factor(ifelse(DEG$PValue < 0.05 & abs(DEG$logFC) > logFC_cutoff,
ifelse(DEG$logFC > logFC_cutoff ,'UP','DOWN'),'NOT')
)
title <- paste0('logFC cutoff: ',round(logFC_cutoff,3),
'\nUp-regulated genes: ',nrow(DEG[DEG$change =='UP',]) ,
'\nDown-regulated genes: ',nrow(DEG[DEG$change =='DOWN',])
)
}
vol1 = ggplot(data=DEG, aes(x=logFC, y=-log10(PValue), color=significant)) +
geom_point(alpha=0.4, size=1.75) +
theme_set(theme_set(theme_bw(base_size=20)))+
xlab("logFC") + ylab("-log10 p-value") +
ggtitle( title ) + theme(plot.title = element_text(size=15,hjust = 0.5))+
scale_colour_manual(values = c('blue','black','red')) # according to the levels(DEG$change)
print(vol1)
vol1 = ggplot(data=DEG, aes(x=logFC, y=-log10(PValue), color=change)) +
geom_point(alpha=0.4, size=1.75) +
theme_set(theme_set(theme_bw(base_size=20)))+
xlab("logFC") + ylab("-log10 p-value") +
ggtitle( title ) + theme(plot.title = element_text(size=15,hjust = 0.5))+
scale_colour_manual(values = c('blue','black','red')) # according to the levels(DEG$change)
print(vol1)
View(limma_voom_DEG)
DEG=limma_voom_DEG
if(T){
logFC_cutoff <- with(DEG,mean(abs(logFC)) + 2*sd(abs(logFC)) )
DEG$change = as.factor(ifelse(DEG$P.Value < 0.05 & abs(DEG$logFC) > logFC_cutoff,
ifelse(DEG$logFC > logFC_cutoff ,'UP','DOWN'),'NOT')
)
title <- paste0('logFC cutoff: ',round(logFC_cutoff,3),
'\nUp-regulated genes: ',nrow(DEG[DEG$change =='UP',]) ,
'\nDown-regulated genes: ',nrow(DEG[DEG$change =='DOWN',])
)
}
vol1 = ggplot(data=DEG, aes(x=logFC, y=-log10(P.Value), color=change)) +
geom_point(alpha=0.4, size=1.75) +
theme_set(theme_set(theme_bw(base_size=20)))+
xlab("logFC") + ylab("-log10 p-value") +
ggtitle( title ) + theme(plot.title = element_text(size=15,hjust = 0.5))+
scale_colour_manual(values = c('blue','black','red')) # according to the levels(DEG$change)
print(vol1)
count <- expr
e$samples
grp
count <- expr
countData <- count[apply(count, 1, sum) > 0 ,]
dge <- DGEList(counts=countData,group=grp)
dge$samples$lib.size <- colSums(dge$counts)
dge <- calcNormFactors(dge)
dge$samples
e$samples
design <- model.matrix(~0+factor(group_list))
design <- model.matrix(~0+factor(grp))
rownames(design)<-colnames(dge)
colnames(design)<-levels(factor(grp))
dge <- estimateGLMCommonDisp(dge,design)
dge <- estimateGLMTrendedDisp(dge, design)
dge <- estimateGLMTagwiseDisp(dge, design)
# adjust contrast by design
lrt <- glmLRT(fit,  contrast=c(1,0))
nrDEG=topTags(lrt, n=nrow(countData))
nrDEG=as.data.frame(nrDEG)
head(nrDEG)
edgeR_DEG <- nrDEG
DEG=edgeR_DEG
View(edgeR_DEG)
if(T){
logFC_cutoff <- with(DEG,mean(abs(logFC)) + 2*sd(abs(logFC)) )
DEG$change = as.factor(ifelse(DEG$PValue < 0.05 & abs(DEG$logFC) > logFC_cutoff,
ifelse(DEG$logFC > logFC_cutoff ,'UP','DOWN'),'NOT')
)
title <- paste0('logFC cutoff: ',round(logFC_cutoff,3),
'\nUp-regulated genes: ',nrow(DEG[DEG$change =='UP',]) ,
'\nDown-regulated genes: ',nrow(DEG[DEG$change =='DOWN',])
)
}
vol1 = ggplot(data=DEG, aes(x=logFC, y=-log10(PValue), color=change)) +
geom_point(alpha=0.4, size=1.75) +
theme_set(theme_set(theme_bw(base_size=20)))+
xlab("logFC") + ylab("-log10 p-value") +
ggtitle( title ) + theme(plot.title = element_text(size=15,hjust = 0.5))+
scale_colour_manual(values = c('blue','black','red')) # according to the levels(DEG$change)
print(vol1)
grp
fit
design
if(T){
dge <- DGEList(counts=countData,group=grp)
dge$samples$lib.size <- colSums(dge$counts)
dge <- calcNormFactors(dge)
dge$samples
design <- model.matrix(~0+factor(grp))
rownames(design)<-colnames(dge)
colnames(design)<-levels(factor(grp))
dge <- estimateGLMCommonDisp(dge,design)
dge <- estimateGLMTrendedDisp(dge, design)
dge <- estimateGLMTagwiseDisp(dge, design)
fit <- glmFit(dge, design)
# adjust contrast by design
lrt <- glmLRT(fit,  contrast=c(0,1))
nrDEG=topTags(lrt, n=nrow(countData))
nrDEG=as.data.frame(nrDEG)
head(nrDEG)
edgeR_DEG <- nrDEG
}
head(nrDEG)
edgeR_DEG <- na.omit(nrDEG)
View(edgeR_DEG)
grp
View(edgeR_DEG)
suppressMessages(library(DESeq2))
(colData <- data.frame(row.names=colnames(expr),
grp=grp))
dds <- DESeqDataSetFromMatrix(countData = expr,
colData = colData,
design = ~ grp)
dds <- DESeq(dds)
res <- results(dds,
contrast=c("grp","trt","untrt"))
resOrdered <- res[order(res$padj),]
head(resOrdered)
DEG_deseq=as.data.frame(resOrdered)
DEG_deseq = na.omit(DEG_deseq)
View(edgeR_DEG)
tmp <- merge(DEG_deseq,limma_voom_DEG,by="gene")
Deseq_DEG = DEG_deseq
save(Deseq_DEG, limma_voom_DEG, edgeR_DEG, "DEG_result.Rdata")
getwd()
save("Deseq_DEG", "limma_voom_DEG", "edgeR_DEG", file="DEG_result.Rdata")
rm(list = ls())
options(stringsAsFactors = F)
load('DEG_result.Rdata')
deseq <- data.frame(gene=rownames(DEG_deseq),
Deseq=DEG_deseq$log2FoldChange)
deseq <- data.frame(gene=rownames(Deseq_DEG),
Deseq=Deseq_DEG$log2FoldChange)
deseq <- data.frame(gene=rownames(Deseq_DEG),
Deseq=Deseq_DEG$log2FoldChange)
deseq <- data.frame(gene=rownames(Deseq_DEG),
Deseq=Deseq_DEG$log2FoldChange)
limma <- data.frame(gene=rownames(limma_voom_DEG),
Deseq=limma_voom_DEG$logFC)
edgeR <- data.frame(gene=rownames(edgeR_DEG),
Deseq=edgeR_DEG$logFC)
View(edgeR)
tmp <- merge(deseq,limma,by="gene")
View(tmp)
deseq <- data.frame(gene=rownames(Deseq_DEG),
Deseq=Deseq_DEG$log2FoldChange))
limma <- data.frame(gene=rownames(limma_voom_DEG),
limma=limma_voom_DEG$logFC))
deseq <- data.frame(gene=rownames(Deseq_DEG),
Deseq=Deseq_DEG$log2FoldChange)
limma <- data.frame(gene=rownames(limma_voom_DEG),
limma=limma_voom_DEG$logFC)
edgeR <- data.frame(gene=rownames(edgeR_DEG),
edgeR=edgeR_DEG$logFC)
tmp <- merge(deseq,limma,by="gene")
View(tmp)
plot(tmp[2:3])
tmp2 <- merge(deseq,edgeR,by="gene")
plot(tmp[2:3])
tmp2 <- merge(deseq,edgeR,by="gene")
plot(tmp2[2:3])
View(edgeR_DEG)
rm(list = ls())
options(stringsAsFactors = F)
load('airway.expreSet.Rdata')
library(edgeR)
exprSet=expr
group_list=grp
d <- DGEList(counts=exprSet,group=factor(group_list))
keep <- rowSums(cpm(d)>1) >= 2
table(keep)
d <- d[keep, , keep.lib.sizes=FALSE]
d$counts
d$samples$lib.size <- colSums(d$counts)
d <- calcNormFactors(d)
d$samples
dge=d
design <- model.matrix(~0+factor(group_list))
rownames(design)<-colnames(dge)
colnames(design)<-levels(factor(group_list))
dge=d
dge <- estimateGLMCommonDisp(dge,design)
dge <- estimateGLMTrendedDisp(dge, design)
dge <- estimateGLMTagwiseDisp(dge, design)
design
fit <- glmFit(dge, design)
# https://www.biostars.org/p/110861/
lrt <- glmLRT(fit,  contrast=c(-1,1))
nrDEG=topTags(lrt, n=nrow(dge))
nrDEG=as.data.frame(nrDEG)
head(nrDEG)
edgeR_DEG =nrDEG
View(edgeR_DEG)
View(edgeR_DEG)
DEG=edgeR_DEG
View(DEG)
if(T){
logFC_cutoff <- with(DEG,mean(abs(logFC)) + 2*sd(abs(logFC)) )
DEG$change = as.factor(ifelse(DEG$PValue < 0.05 & abs(DEG$logFC) > logFC_cutoff,
ifelse(DEG$logFC > logFC_cutoff ,'UP','DOWN'),'NOT')
)
title <- paste0('logFC cutoff: ',round(logFC_cutoff,3),
'\nUp-regulated genes: ',nrow(DEG[DEG$change =='UP',]) ,
'\nDown-regulated genes: ',nrow(DEG[DEG$change =='DOWN',])
)
}
library(ggplot2)
vol1 = ggplot(data=DEG, aes(x=logFC, y=-log10(PValue), color=significant)) +
geom_point(alpha=0.4, size=1.75) +
theme_set(theme_set(theme_bw(base_size=20)))+
xlab("logFC") + ylab("-log10 p-value") +
ggtitle( title ) + theme(plot.title = element_text(size=15,hjust = 0.5))+
scale_colour_manual(values = c('blue','black','red')) # according to the levels(DEG$change)
print(vol1)
vol1 = ggplot(data=DEG, aes(x=logFC, y=-log10(PValue), color=change)) +
geom_point(alpha=0.4, size=1.75) +
theme_set(theme_set(theme_bw(base_size=20)))+
xlab("logFC") + ylab("-log10 p-value") +
ggtitle( title ) + theme(plot.title = element_text(size=15,hjust = 0.5))+
scale_colour_manual(values = c('blue','black','red')) # according to the levels(DEG$change)
print(vol1)
rm(list=ls())
options(stringsAsFactors = F)
group <- factor(c(1,1,2,2,3,3))
group
design <- model.matrix(~group)
design
fit <- glmQLFit(y, design)
library(edgeR)
load('airway.expreSet.Rdata')
suppressMessages(library(DESeq2))
(colData <- data.frame(row.names=colnames(expr),
grp=grp))
dds <- DESeqDataSetFromMatrix(countData = expr,
colData = colData,
design = ~ grp)
dds <- DESeq(dds)
res <- results(dds,
contrast=c("grp","trt","untrt"))
resOrdered <- res[order(res$padj),]
head(resOrdered)
Deseq_DEG=as.data.frame(resOrdered)
Deseq_DEG = na.omit(Deseq_DEG)
library(edgeR)
e <- DGEList(counts=expr,group=factor(grp))
keep <- rowSums(cpm(e)>1) >= 2
e <- e[keep, , keep.lib.sizes=FALSE]
e$samples$lib.size <- colSums(e$counts)
e <- calcNormFactors(e)
e$samples
DEG=e
design <- model.matrix(~0+factor(grp))
rownames(design)<-colnames(DEG)
colnames(design)<-levels(factor(grp))
DEG <- estimateGLMCommonDisp(DEG,design)
DEG <- estimateGLMTrendedDisp(DEG, design)
DEG <- estimateGLMTagwiseDisp(DEG, design)
fit <- glmFit(DEG, design)
# edgeR User guide (Page. 30 => "GLM Approach")
lrt <- glmLRT(fit,  contrast=c(-1,1)) # accoding to design to modify
nrDEG=topTags(lrt, n=nrow(DEG))
nrDEG=as.data.frame(nrDEG)
head(nrDEG)
edgeR_DEG=nrDEG
suppressMessages(library(limma))
library(edgeR)
design <- model.matrix(~0+factor(grp))
colnames(design)=levels(factor(grp))
rownames(design)=colnames(expr)
DEG <- edgeR::DGEList(counts=expr)
DEG <- calcNormFactors(DEG)
v <- voom(DEG,design,plot=TRUE, normalize="quantile")
fit <- lmFit(v, design)
# for one comparison (trt-untrt)
cont.matrix=makeContrasts(contrasts=c('trt-untrt'),levels = design)
fit2=contrasts.fit(fit,cont.matrix)
fit2=eBayes(fit2)
result = topTable(fit2, coef='trt-untrt', n=Inf)
limma_voom_DEG = na.omit(result)
## save three main DEG pkgs results
save("Deseq_DEG", "limma_voom_DEG", "edgeR_DEG", file="DEG_result.Rdata")
### ---------------
###
### Creator: Yunze Liu (Reed Liu)
### Date: 2018-12-23
### Email: jieandze1314@gmail.com
### Blog: https://reedliu.github.io/
### CAAS/AGIS/SDAU
### Update Log: 2018-12-23  First version about three DEG pkgs comparison
###
### ---------------
rm(list = ls())
options(stringsAsFactors = F)
load('DEG_result.Rdata')
deseq <- data.frame(gene=rownames(Deseq_DEG),
Deseq=Deseq_DEG$log2FoldChange)
limma <- data.frame(gene=rownames(limma_voom_DEG),
limma=limma_voom_DEG$logFC)
edgeR <- data.frame(gene=rownames(edgeR_DEG),
edgeR=edgeR_DEG$logFC)
View(deseq)
View(edgeR)
## Venn plot
if(!require(VennDiagram))install.packages('VennDiagram')
library (VennDiagram)
View(deseq)
venn.diagram(x= list(Deseq2 = deseq$gene,
edgeR = edgeR$gene,
limma-voom = limma$gene),
filename = "DEG_compare.png",
height = 450, width = 450,
resolution =300,
imagetype="png",
col="transparent",
fill=c("green","yellow","darkorchid1"),
alpha = 0.50,
cex=0.45,
cat.cex=0.45)
list(Deseq2 = deseq$gene,
edgeR = edgeR$gene,
limma-voom = limma$gene)
limma$gene
edgeR$gene
venn.diagram(x= list(Deseq2 = deseq$gene,
edgeR = edgeR$gene,
limma-voom = limma$gene),
filename = "DEG_compare.png",
height = 450, width = 450,
resolution =300,
imagetype="png",
col="transparent",
fill=c("green","yellow","darkorchid1"),
alpha = 0.50,
cex=0.45,
cat.cex=0.45)
A <- c("C", "D", "B", "E")
B <- c("C", "E", "B", "A")
C <- c("C", "E", "X", "Y")
venn.diagram(x= list(A = A,B = B,C = C),
filename = "pic.png",
height = 450, width = 450,
resolution =300,
imagetype="png",
col="transparent",
fill=c("green","yellow","darkorchid1"),
alpha = 0.50,
cex=0.45,
cat.cex=0.45)
venn.diagram(x= list(A = A,B = B,C = C),
filename = "pic.png",
height = 450, width = 450,
resolution =300,
imagetype="png",
col="transparent",
fill=c("green","yellow","darkorchid1"),
alpha = 0.50,
cex=0.45,
cat.cex=0.45)
dev.off()
class(deseq$gene)
A <- deseq$gene
B <- edgeR$gene
C <- limma$gene
venn.diagram(x= list(A = A,B = B,C = C),
filename = "pic.png",
height = 450, width = 450,
resolution =300,
imagetype="png",
col="transparent",
fill=c("green","yellow","darkorchid1"),
alpha = 0.50,
cex=0.45,
cat.cex=0.45)
DEG = Deseq_DEG
logFC_cutoff <- with(DEG,mean(abs(log2FoldChange)) + 2*sd(abs(log2FoldChange)) )
DEG$change = as.factor(ifelse(DEG$pvalue < 0.05 & abs(DEG$log2FoldChange) > logFC_cutoff,
ifelse(DEG$log2FoldChange > logFC_cutoff ,'UP','DOWN'),'NOT')
)
DEG[DEG$change =='UP',]
View(DEG[DEG$change =='UP',])
View(DEG[DEG$change =='UP',])
rownames(DEG[DEG$change =='UP',])
Deseq <- data.frame(up=rownames(DEG[DEG$change =='UP',]),
down=rownames(DEG[DEG$change =='DOWN',]))
rownames(DEG[DEG$change =='DOWN',])
Deseq_up <- rownames(DEG[DEG$change =='UP',])
Deseq_down <- rownames(DEG[DEG$change =='DOWN',])
Deseq_up
Deseq_down
limma_voom_DEG
View(DEG = Deseq_DEG
logFC_cutoff <- with(DEG,mean(abs(log2FoldChange)) + 2*sd(abs(log2FoldChange)) )
DEG$change = as.factor(ifelse(DEG$pvalue < 0.05 & abs(DEG$log2FoldChange) > logFC_cutoff,
ifelse(DEG$log2FoldChange > logFC_cutoff ,'UP','DOWN'),'NOT')
)
Deseq_up <- rownames(DEG[DEG$change =='UP',])
Deseq_down <- rownames(DEG[DEG$change =='DOWN',]))
View(limma_voom_DEG)
# get limma UP and DOWN genes
DEG = limma_voom_DEG
logFC_cutoff <- with(DEG,mean(abs(logFC)) + 2*sd(abs(logFC)) )
DEG$change = as.factor(ifelse(DEG$P.Value < 0.05 & abs(DEG$logFC) > logFC_cutoff,
ifelse(DEG$logFC > logFC_cutoff ,'UP','DOWN'),'NOT')
)
limma_up <- rownames(DEG[DEG$change =='UP',])
limma_down <- rownames(DEG[DEG$change =='DOWN',])
limma_up
# get edgeR UP and DOWN genes
DEG = edgeR_DEG
View(edgeR_DEG)
# get edgeR UP and DOWN genes
DEG = edgeR_DEG
logFC_cutoff <- with(DEG,mean(abs(logFC)) + 2*sd(abs(logFC)) )
DEG$change = as.factor(ifelse(DEG$PValue < 0.05 & abs(DEG$logFC) > logFC_cutoff,
ifelse(DEG$logFC > logFC_cutoff ,'UP','DOWN'),'NOT')
)
edgeR_up <- rownames(DEG[DEG$change =='UP',])
edgeR_down <- rownames(DEG[DEG$change =='DOWN',])
# first look at UP comparison
venn.diagram(x= list(DeSeq2 = Deseq_up,
limma-voom = limma_up,
edgeR = edgeR_up),
filename = "compare_UP.png",
height = 450, width = 450,
resolution =300,
imagetype="png",
col="transparent",
fill=c("green","yellow","darkorchid1"),
alpha = 0.50,
cex=0.45,
cat.cex=0.45)
list(DeSeq2 = Deseq_up,limma-voom = limma_up,edgeR = edgeR_up)
# first look at UP comparison
venn.diagram(x= list(Deseq_up = Deseq_up,limma_up = limma_up,edgeR_up = edgeR_up),
filename = "compare_UP.png",
height = 450, width = 450,
resolution =300,
imagetype="png",
col="transparent",
fill=c("green","yellow","darkorchid1"),
alpha = 0.50,
cex=0.45,
cat.cex=0.45)
# DOWN comparison
venn.diagram(x= list(Deseq_down = Deseq_down,
limma_down = limma_down,
edgeR_down = edgeR_down),
filename = "compare_DOWN.png",
height = 450, width = 450,
resolution =300,
imagetype="png",
col="transparent",
fill=c("green","yellow","darkorchid1"),
alpha = 0.50,
cex=0.45,
cat.cex=0.45)
# first look at UP comparison
venn.diagram(x= list(Deseq = Deseq,limma = limma,edgeR = edgeR),
filename = "compare_UP.png",
height = 450, width = 450,
resolution =300,
imagetype="png",
col="transparent",
fill=c("green","yellow","darkorchid1"),
alpha = 0.50,
cex=0.45,
cat.cex=0.45)
Deseq=Deseq_up
limma=limma_up
edgeR=edgeR_up
# first look at UP comparison
venn.diagram(x= list(Deseq = Deseq,limma = limma,edgeR = edgeR),
filename = "compare_UP.png",
height = 450, width = 450,
resolution =300,
imagetype="png",
col="transparent",
fill=c("green","yellow","darkorchid1"),
alpha = 0.50,
cex=0.45,
cat.cex=0.45)
