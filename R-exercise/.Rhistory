dim(expr); expr <- expr[p2s$probe_id,]; dim(expr)
p2s$median <- apply(expr, 1, median)
featureNames(expr)
featureNames(geo)
probeID <- rownames(expr)
probeID
tmp <- data.frame(Gene=unlist(mget(x = probeID,envir = hgu133aSYMBOL)))
View(tmp)
duplicated(tmp)
tmp[!duplicated(tmp),]
tmp<- tmp[!duplicated(tmp),]
tmp<- tmp[!duplicated(tmp),]
tmp <- data.frame(Gene=unlist(mget(x = probeID,envir = hgu133aSYMBOL)))
tmp2 <- tmp[!duplicated(tmp$Gene)]
tmp2 <- tmp[!duplicated(tmp$Gene),]
duplicated(tmp$Gene)
!duplicated(tmp$Gene)
tmp[!duplicated(tmp$Gene),]
class(tmp[!duplicated(tmp$Gene),])
class(tmp[!duplicated(tmp$Gene)])
class(tmp[!duplicated(tmp$Gene),])
tmp[!duplicated(tmp$Gene)
!duplicated(tmp$Gene)
tmp[!duplicated(tmp$Gene),]
class(tmp[!duplicated(tmp$Gene),])
View(tmp)
tmp <- data.frame(tmp,probe=rownames(tmp))
View(tmp)
match(rownames(expr),tmp$probe)
tmp[match(rownames(expr),tmp$probe),][,1]
tmp[match(rownames(expr),tmp$probe),][,1]
library(magrittr)
tmp[match(rownames(expr),tmp$probe),][,1] %>% grep("ZW10")
tmp[match(rownames(expr),tmp$probe),][,1] %>% grepl("ZW10")
tmp[!duplicated(tmp$Gene),]
!duplicated(tmp$Gene)
tmp[!duplicated(tmp$Gene),]
tmp[!duplicated(tmp$Gene),] %>% head
source('~/Git/my_Practice/R-exercise/exercise-08-retrieve-genes-heatmap.R', echo=TRUE)
tmp[!duplicated(tmp$Gene),] %>% dim
tmp[!duplicated(tmp$Gene),] %>% dim
#################################
## THIRD probe2geneID in expr
#################################
p2s=toTable(hgu133aSYMBOL);head(p2s)
dim(expr); expr <- expr[p2s$probe_id,]; dim(expr)
probeID <- rownames(expr)
tmp <- data.frame(Gene=unlist(mget(x = probeID,envir = hgu133aSYMBOL)))
tmp[!duplicated(tmp$Gene),] %>% dim
tmp[!duplicated(tmp$Gene),] %>% length
tmp <- tmp[!duplicated(tmp$Gene),]
probeID <- rownames(expr)
tmp <- data.frame(Gene=unlist(mget(x = probeID,envir = hgu133aSYMBOL)))
tmp[!duplicated(tmp$Gene),]
tmp[!duplicated(tmp$Gene),] %>% class
dim(tmp)
tmp[match(rownames(expr),tmp$probe),]
tmp <- data.frame(tmp,probe=rownames(tmp))
View(tmp)
tmp[!duplicated(tmp$Gene),]
tmp[!duplicated(tmp$probe),]
tmp[match(rownames(expr),tmp$probe),]
!duplicated(tmp$Gene)
tmp[!duplicated(tmp$Gene)]
match(rownames(expr),tmp$probe)
tmp[1]
tmp[1,]
tmp[1,][1]
tmp[1,][1] %>% class
tmp[1,][1,1] %>% class
tmp[1,][1,1]
tmp[match(rownames(expr),tmp$probe),][1,1]
tmp[match(rownames(expr),tmp$probe),][2,1]
tmp[match(rownames(expr),tmp$probe),][,1]
tmp[match(rownames(expr),tmp$probe),][,1] %>% class
tmp[!duplicated(tmp$Gene)]
tmp[!duplicated(tmp$Gene),]
tmp2 <- tmp[!duplicated(tmp$Gene),]
View(tmp2)
tmp <- tmp[!duplicated(tmp$Gene),]
rownames(expr) <- tmp[match(rownames(expr),tmp$probe),][,1]
View(expr)
p2s$median <- apply(expr, 1, median)
p2s <- p2s[order(p2s$symbol, p2s$median, decreasing = T),]
View(p2s)
p2s <- p2s[!duplicated(p2s$probe_id),]
p2s <- p2s[!duplicated(p2s$symbol),]
p2s$median <- apply(expr, 1, median)
p2s <- p2s[order(p2s$symbol, p2s$median, decreasing = T),]
#################################
## THIRD probe2geneID in expr
#################################
p2s=toTable(hgu133aSYMBOL);head(p2s)
p2s$median <- apply(expr, 1, median)
p2s <- p2s[order(p2s$symbol, p2s$median, decreasing = T),]
expr <- expr[p2s$probe_id,]
dim(expr); expr <- expr[p2s$probe_id,]; dim(expr)
rm(list=ls())
options(stringsAsFactors = F)
#################################
## FIRST download GSE and load expr
#################################
GSE_expr <- function(GSE){
library(GEOquery)
if(!file.exists(GSE)){
geo <<- getGEO(GSE, destdir = '.', getGPL = F, AnnotGPL = F)
gdata <- paste0(GSE,'.eSet.Rdata')
save(geo, file = gdata)
}
load(gdata)
expr <<- exprs(geo[[1]])
}
GSE_expr("GSE17215")
#################################
## THIRD probe2geneID in expr
#################################
p2s=toTable(hgu133aSYMBOL);head(p2s)
dim(expr); expr <- expr[p2s$probe_id,]; dim(expr)
p2s$median <- apply(expr, 1, median)
p2s <- p2s[order(p2s$symbol, p2s$median, decreasing = T),]
p2s <- p2s[!duplicated(p2s$symbol),]
expr <- expr[p2s$probe_id,]
rownames(expr) <- p2s$symbol
expr[1:4,1:4]
expr[1:4,1:4]
expr[1:4,1:4]
dim(expr)
View(expr)
#################################
## FOURTH match genes to expr and plot heatmap
#################################
test_gs <- "ACTR3B ANLN BAG1 BCL2 BIRC5 BLVRA CCNB1 CCNE1 CDC20 CDC6 CDCA1 CDH3 CENPF CEP55 CXXC5 EGFR ERBB2 ESR1 EXO1 FGFR4 FOXA1 FOXC1 GPR160 GRB7 KIF2C KNTC2 KRT14 KRT17 KRT5 MAPT MDM2 MELK MIA MKI67 MLPH MMP11 MYBL2 MYC NAT1 ORC6L PGR PHGDH PTTG1 RRM2 SFRP1 SLC39A6 TMEM45B TYMS UBE2C UBE2T"
#################################
## FOURTH match genes to expr and plot heatmap
#################################
# get a goup of genes called "gp"
gp <- "ACTR3B ANLN BAG1 BCL2 BIRC5 BLVRA CCNB1 CCNE1 CDC20 CDC6 CDCA1 CDH3 CENPF CEP55 CXXC5 EGFR ERBB2 ESR1 EXO1 FGFR4 FOXA1 FOXC1 GPR160 GRB7 KIF2C KNTC2 KRT14 KRT17 KRT5 MAPT MDM2 MELK MIA MKI67 MLPH MMP11 MYBL2 MYC NAT1 ORC6L PGR PHGDH PTTG1 RRM2 SFRP1 SLC39A6 TMEM45B TYMS UBE2C UBE2T"
strsplit(gp, ' ')
gp <- strsplit(gp, ' ')
gp <- strsplit(gp, ' ')[[1]]
#################################
## FOURTH match genes to expr and plot heatmap
#################################
# get a goup of genes called "gp"
gp <- "ACTR3B ANLN BAG1 BCL2 BIRC5 BLVRA CCNB1 CCNE1 CDC20 CDC6 CDCA1 CDH3 CENPF CEP55 CXXC5 EGFR ERBB2 ESR1 EXO1 FGFR4 FOXA1 FOXC1 GPR160 GRB7 KIF2C KNTC2 KRT14 KRT17 KRT5 MAPT MDM2 MELK MIA MKI67 MLPH MMP11 MYBL2 MYC NAT1 ORC6L PGR PHGDH PTTG1 RRM2 SFRP1 SLC39A6 TMEM45B TYMS UBE2C UBE2T"
gp <- strsplit(gp, ' ')[[1]]
gp
expr[gp]
expr[gp,]
rownames(expr)[gp,]
gp %in% rownames(expr)
gp %in% rownames(expr) %>% table
gp %in% rownames(expr)
gp[gp %in% rownames(expr)]
f_gp <- gp[gp %in% rownames(expr)] # filered gene group
f_gp
expr[f_gp]
expr[f_gp,]
gp_expr <- expr[f_gp,]
gp_expr
gp_expr
# 根据gp_expr做热图（做之前先log2处理下，对数据降维）
gp_expr <- log2(gp_expr)
gp_expr
pheatmap::pheatmap(gp_expr)
pheatmap::pheatmap(gp_expr, scale = "row")
View(expr)
rm(list=ls())
options(stringsAsFactors = F)
#################################
## FIRST download GSE and load expr
#################################
GSE_expr <- function(GSE){
library(GEOquery)
if(!file.exists(GSE)){
geo <<- getGEO(GSE, destdir = '.', getGPL = F, AnnotGPL = F)
gdata <- paste0(GSE,'.eSet.Rdata')
save(geo, file = gdata)
}
load(gdata)
expr <<- exprs(geo[[1]])
}
GSE_expr("GSE17215")
View(expr)
#################################
## THIRD probe2geneID in expr
#################################
p2s=toTable(hgu133aSYMBOL);head(p2s)
View(p2s)
#################################
## THIRD probe2geneID in expr
#################################
p2s=toTable(hgu133aSYMBOL);head(p2s)
dim(expr); expr <- expr[p2s$probe_id,]; dim(expr)
#################################
## FOURTH match wanted genes to expr
#################################
# get a goup of genes called "gp"
gp <- "ACTR3B ANLN BAG1 BCL2 BIRC5 BLVRA CCNB1 CCNE1 CDC20 CDC6 CDCA1 CDH3 CENPF CEP55 CXXC5 EGFR ERBB2 ESR1 EXO1 FGFR4 FOXA1 FOXC1 GPR160 GRB7 KIF2C KNTC2 KRT14 KRT17 KRT5 MAPT MDM2 MELK MIA MKI67 MLPH MMP11 MYBL2 MYC NAT1 ORC6L PGR PHGDH PTTG1 RRM2 SFRP1 SLC39A6 TMEM45B TYMS UBE2C UBE2T"
gp <- strsplit(gp, ' ')[[1]]
View(p2s)
dplyr::filter(p2s, gp %in% p2s$symbol)
gp
dplyr::filter(p2s, p2s$symbol %in% gp)
tmp <- dplyr::filter(p2s, p2s$symbol %in% gp)
View(tmp)
View(expr)
?tibble::rownames_to_column
tmp2 <- tibble::rownames_to_column(data.frame(expr),"probe")
View(tmp2)
View(expr)
tmp2 <- tibble::rownames_to_column(data.frame(expr),"probe_id")
tmp3 <- merge(tmp,tmp3,by="probe_id")
tmp3 <- merge(tmp,tmp2,by="probe_id")
View(tmp3)
tmp3$median <- apply(tmp3, 1, median)
class(tmp3)
tmp3 <- as.matrix(tmp3)
tmp3$median <- apply(tmp3, 1, median)
tmp3 <- merge(tmp,tmp2,by="probe_id")
View(tmp3)
rownames(tmp3) <- tmp3$symbol
apply(tmp3[,3:ncol(tmp3)], 1, median)
tmp3$median <- apply(tmp3[,3:ncol(tmp3)], 1, median)
tmp3 <- tmp3[order(tmp3$symbol, p2s$median, decreasing = T),]
tmp3 <- tmp3[order(tmp3$symbol, tmp3$median, decreasing = T),]
tmp3 <- tmp3[!duplicated(tmp3$symbol),]
rownames(tmp3) <- tmp3$symbol
tmp3 <- tmp3[,-c(1:2)]
gp_expr <- log2(tmp3)
View(gp_expr)
pheatmap::pheatmap(gp_expr, scale = "row")
View(p2s)
View(tmp3)
tmp3 <- tmp3[,-c(1,2,ncol(tmp3))]
tmp <- dplyr::filter(p2s, p2s$symbol %in% gp)
tmp2 <- tibble::rownames_to_column(data.frame(expr),"probe_id")
tmp3 <- merge(tmp,tmp2,by="probe_id")
tmp3$median <- apply(tmp3[,3:ncol(tmp3)], 1, median)
tmp3 <- tmp3[order(tmp3$symbol, tmp3$median, decreasing = T),]
tmp3 <- tmp3[!duplicated(tmp3$symbol),]
rownames(tmp3) <- tmp3$symbol
tmp3 <- tmp3[,-c(1,2,ncol(tmp3))]
View(tmp3)
gp_expr <- log2(tmp3)
pheatmap::pheatmap(gp_expr, scale = "row")
rm(list=ls())
options(stringsAsFactors = F)
#################################
## FIRST download GSE and load expr
#################################
GSE_expr <- function(GSE){
library(GEOquery)
if(!file.exists(GSE)){
geo <<- getGEO(GSE, destdir = '.', getGPL = F, AnnotGPL = F)
gdata <- paste0(GSE,'.eSet.Rdata')
save(geo, file = gdata)
}
load(gdata)
expr <<- exprs(geo[[1]])
}
GSE_expr("GSE24673")
dim(expr)
expr[1:4,1:4]
echo
?echo
message ("Print this on the screen")
#################################
## FIRST download GSE and load expr
#################################
GSE_expr <- function(GSE){
library(GEOquery)
if(!file.exists(GSE)){
geo <<- getGEO(GSE, destdir = '.', getGPL = F, AnnotGPL = F)
gdata <- paste0(GSE,'.eSet.Rdata')
save(geo, file = gdata)
}
message ("This is created by Reed Liu (jieandze1314@gmail.com)")
load(gdata)
expr <<- exprs(geo[[1]])
}
GSE_expr("GSE24673")
#################################
## SECOND get samples info
#################################
pdata <- pData(expr)
pdata
#################################
## SECOND get samples info
#################################
pdata <- pData(geo)
pdata
geo
geo[[1]]
#################################
## SECOND get samples info
#################################
pdata <- pData(geo[[1]])
pdata
View(pdata)
View(expr)
grp <- c('rbc','rbc','rbc',
'rbn','rbn','rbn',
'rbc','rbc','rbc',
'normal','normal')
grp
new_cor <- cor(expr)
pheatmap::pheatmap(new_cor)
new_cor
View(new_cor)
expr
View(expr)
grp_df <- data.frame(group=grp)
grp_df
rownames(grp_df) <- colnames(expr)
pheatmap::pheatmap(new_cor, annotation_row = grp_df)
pheatmap::pheatmap(new_cor, annotation_col = grp_df)
rm(list=ls())
options(stringsAsFactors = F)
GSE_expr <- function(GSE){
library(GEOquery)
if(!file.exists(GSE)){
geo <<- getGEO(GSE, destdir = '.', getGPL = F, AnnotGPL = F)
gdata <- paste0(GSE,'.eSet.Rdata')
save(geo, file = gdata)
}
message ("This is created by Reed Liu (jieandze1314@gmail.com)")
load(gdata)
expr <<- exprs(geo[[1]])
}
GSE_expr("GSE42872")
dim(expr)
expr[1:4,1:4]
sort(apply(expr,1,mean))
sort(apply(expr,1,mean))[1]
sort(apply(expr,1,sd))[1]
sort(apply(expr,1,mad))[1]
sort(apply(expr,1,mean))[1]
sort(apply(expr,1,mean))[[1]]
sort(apply(expr,1,sd))[[1]]
sort(apply(expr,1,mean),decreasing = T)[1]
sort(apply(expr,1,sd),decreasing = T)[1]
sort(apply(expr,1,mad),decreasing = T)[1]
rm(list=ls())
options(stringsAsFactors = F)
GSE_expr <- function(GSE){
library(GEOquery)
if(!file.exists(GSE)){
geo <<- getGEO(GSE, destdir = '.', getGPL = F, AnnotGPL = F)
gdata <- paste0(GSE,'.eSet.Rdata')
save(geo, file = gdata)
}
message ("This is created by Reed Liu (jieandze1314@gmail.com)")
load(gdata)
expr <<- exprs(geo[[1]])
}
GSE_expr("GSE42872")
dim(expr)
expr[1:4,1:4]
pdata <- pData(geo[[1]])
View(pdata)
pdata$title
pdata$title %>% head
pdata$title %>% strsplit(' ')
pdata$title %>% strsplit(' ') %>% unlist
pdata$title %>% strsplit(' ') %>% unlist[4]
unlist(lappy(pdata$title, function(x){
strsplit(x, ' ')
})[4])
unlist(lapply(pdata$title, function(x){
strsplit(x, ' ')
})[4])
unlist(lapply(pdata$title, function(x){
strsplit(x, ' ')
}))[4]
unlist(lapply(pdata$title, function(x){
strsplit(x, ' ')[[1]][4]
}))
lapply(pdata$title, function(x){
strsplit(x, ' ')[[1]][4]
})
grp <- unlist(lapply(pdata$title, function(x){
strsplit(x, ' ')[[1]][4]
}))
grp
# 开始limma分析
suppressMessages(library(limma))
#limma needs：表达矩阵（expr）、分组矩阵（design）、比较矩阵（contrast）
#先做一个分组矩阵～design，说明progres是哪几个样本，stable又是哪几个
design <- model.matrix(~0+factor(grp))
colnames(design) <- levels(factor(grp))
rownames(design) <- colnames(expr)
design
#再做一个比较矩阵【一般是case比control】
contrast<-makeContrasts(paste0(unique(grp),collapse = "-"),levels = design)
contrast
expr[1:4,1:4]
#再做一个比较矩阵【一般是case比control】
contrast<-makeContrasts(paste0(unique(grp),collapse = "-"),levels = design)
contrast
DEG <- function(expr,design,contrast){
##step1
fit <- lmFit(expr,design)
##step2
fit2 <- contrasts.fit(fit, contrast)
fit2 <- eBayes(fit2)
##step3
mtx = topTable(fit2, coef=1, n=Inf)
deg_mtx = na.omit(mtx)
return(deg_mtx)
}
DEG_mtx <- DEG(expr,design,contrast)
View(DEG_mtx)
############
# 火山图
############
DEG=DEG_mtx
if(T){
logFC_cutoff <- with(DEG,mean(abs(log2FoldChange)) + 2*sd(abs(log2FoldChange)) )
DEG$change = as.factor(ifelse(DEG$pvalue < 0.05 & abs(DEG$log2FoldChange) > logFC_cutoff,
ifelse(DEG$log2FoldChange > logFC_cutoff ,'UP','DOWN'),'NOT')
)
title <- paste0('log2FoldChange cutoff: ',round(logFC_cutoff,3),
'\nUp-regulated genes: ',nrow(DEG[DEG$change =='UP',]) ,
'\nDown-regulated genes: ',nrow(DEG[DEG$change =='DOWN',])
)
}
colnames(DEG)
############
# 火山图
############
DEG=DEG_mtx
log2FoldChange=logFC
pvalue=P.Value
############
# 火山图
############
DEG=DEG_mtx
if(T){
logFC_cutoff <- with(DEG,mean(abs(logFC)) + 2*sd(abs(logFC)) )
DEG$change = as.factor(ifelse(DEG$P.Value < 0.05 & abs(DEG$logFC) > logFC_cutoff,
ifelse(DEG$logFC > logFC_cutoff ,'UP','DOWN'),'NOT')
)
title <- paste0('log2FoldChange cutoff: ',round(logFC_cutoff,3),
'\nUp-regulated genes: ',nrow(DEG[DEG$change =='UP',]) ,
'\nDown-regulated genes: ',nrow(DEG[DEG$change =='DOWN',])
)
}
library(ggplot2)
vol1 = ggplot(data=DEG, aes(x=logFC, y=-log10(P.Value), color=significant)) +
geom_point(alpha=0.4, size=1.75) +
theme_set(theme_set(theme_bw(base_size=20)))+
xlab("log2FoldChange") + ylab("-log10 p-value") +
ggtitle( title ) + theme(plot.title = element_text(size=15,hjust = 0.5))+
scale_colour_manual(values = c('blue','black','red')) # according to the levels(DEG$change)
print(vol1)
vol1 = ggplot(data=DEG, aes(x=logFC, y=-log10(P.Value), color=change)) +
geom_point(alpha=0.4, size=1.75) +
theme_set(theme_set(theme_bw(base_size=20)))+
xlab("log2FoldChange") + ylab("-log10 p-value") +
ggtitle( title ) + theme(plot.title = element_text(size=15,hjust = 0.5))+
scale_colour_manual(values = c('blue','black','red')) # according to the levels(DEG$change)
print(vol1)
install.packages("magick")
library(magick)
tiger <- image_read_svg('https://github.com/reedliu/ImageBed/blob/master/microarray/1.png', width = 400)
image_read('https://github.com/reedliu/ImageBed/blob/master/microarray/1.png', width=400)
image_read('https://github.com/reedliu/ImageBed/blob/master/microarray/1.png', width=400)
image_read('https://github.com/reedliu/ImageBed/blob/master/microarray/1.png',width=400)
image_read('https://github.com/reedliu/ImageBed/blob/master/microarray/1.png')
image_read('~/Downloads/vocalno.png')
library(BiocManager)
install.packages("imager")
library(imager)
?imager
plot(boats)
par(mfrow=c(2,2))
t <- c(1:(24*14))
P <- 24
A <- 10
y <- A*sin(2*pi*t/P)+20
par(mfrow=c(2,2))
plot(y,type = "l",xlab = "Time (hours)",ylab = "Amplitude",main = "Time series")
acf(y,main = "Autocorrelation",xlab = "Lag (hours)", ylab = "ACF")
spectrum(y,method = "ar",main = "Spectral density function",
xlab = "Frequency (cycles per hour)",ylab = "Spectrum")
require(biwavelet)
t1 <- cbind(t, y)
wt.t1=wt(t1)
plot(wt.t1, plot.cb=FALSE, plot.phase=FALSE,main = "Continuous wavelet transform",
ylab = "Period (hours)",xlab = "Time (hours)")
dev.off()
par(mfrow=c(2,2))
plot(y,type = "l",xlab = "Time (hours)",ylab = "Amplitude",main = "Time series")
acf(y,main = "Autocorrelation",xlab = "Lag (hours)", ylab = "ACF")
spectrum(y,method = "ar",main = "Spectral density function",
xlab = "Frequency (cycles per hour)",ylab = "Spectrum")
?VennDiagram
gplots::venn(list(A=1:5,B=4:6,C=c(4,8:10)))
dev.off()
par(mfrow=c(2,2))
gplots::venn(list(A=1:5,B=4:6,C=c(4,8:10)))
gplots::venn(list(A=1:15,B=4:6,C=c(4,8:10)))
gplots::venn(list(A=1:25,B=4:6,C=c(4,8:10)))
gplots::venn(list(A=1:35,B=4:6,C=c(4,8:10)))
dev.off()
par(mfrow=c(2,2))
gplots::venn(list(A=1:5,B=4:6,C=c(4,8:10)))
gplots::venn(list(A=1:15,B=4:6,C=c(4,8:10)))
gplots::venn(list(A=1:25,B=4:6,C=c(4,8:10)))
gplots::venn(list(A=1:35,B=4:6,C=c(4,8:10)))
?venn
